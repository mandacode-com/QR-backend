// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/google/uuid"
	"qr.mandacode.com/redirect/ent/qrtarget"
	"qr.mandacode.com/redirect/ent/schema"
	"qr.mandacode.com/redirect/ent/targettype"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	qrtargetFields := schema.QrTarget{}.Fields()
	_ = qrtargetFields
	// qrtargetDescTargetTypeID is the schema descriptor for target_type_id field.
	qrtargetDescTargetTypeID := qrtargetFields[1].Descriptor()
	// qrtarget.TargetTypeIDValidator is a validator for the "target_type_id" field. It is called by the builders before save.
	qrtarget.TargetTypeIDValidator = qrtargetDescTargetTypeID.Validators[0].(func(int) error)
	// qrtargetDescID is the schema descriptor for id field.
	qrtargetDescID := qrtargetFields[0].Descriptor()
	// qrtarget.DefaultID holds the default value on creation for the id field.
	qrtarget.DefaultID = qrtargetDescID.Default.(func() uuid.UUID)
	targettypeFields := schema.TargetType{}.Fields()
	_ = targettypeFields
	// targettypeDescType is the schema descriptor for type field.
	targettypeDescType := targettypeFields[1].Descriptor()
	// targettype.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	targettype.TypeValidator = targettypeDescType.Validators[0].(func(string) error)
	// targettypeDescID is the schema descriptor for id field.
	targettypeDescID := targettypeFields[0].Descriptor()
	// targettype.IDValidator is a validator for the "id" field. It is called by the builders before save.
	targettype.IDValidator = targettypeDescID.Validators[0].(func(int) error)
}
